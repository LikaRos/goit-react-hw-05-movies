{"version":3,"file":"static/js/168.a164af5e.chunk.js","mappings":"8NACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,wB,uCCKrEA,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBH,GAASI,KAAKL,KAChC,CAACC,IACJK,QAAQC,IAAIR,IAGV,8BACGA,EAAQS,OACPT,EAAQU,KAAI,SAAAC,GAAM,OAChB,2BACE,eAAIC,UAAWC,EAAAA,MAAf,sBACA,cAAGD,UAAWC,EAAAA,KAAd,SAA4BF,EAAOG,WACnC,gBACEC,IACEJ,EAAOK,aAAP,4CACqCL,EAAOM,cAE9CC,IAAG,UAAKP,EAAOQ,MAAZ,aACHP,UAAWC,EAAAA,OAGb,cAAGD,UAAWC,EAAAA,MAAd,SAA6BF,EAAOS,WAZ7BT,EAAOU,QAgBlB,gDAMR,K,0MCvCAC,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,WAAMH,GAAN,uFACGC,IAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IADrC,cAClBE,EADkB,yBAGjBA,EAAaC,MAHI,2CAAH,sDAMVC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAON,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAyDK,KAGrDC,EAAY,mCAAG,WAAMC,GAAN,0FACnBR,IAAAA,IAAA,gCAAmCC,GAAW,CACnDQ,OAAQ,CACND,MAAOA,EACPE,SAAU,OAJY,2CAAH,sDAQZC,EAAe,mCAAG,WAAMZ,GAAN,uFACFC,IAAAA,IAAA,iBACfD,EADe,4BACOE,IAFL,cACvBW,EADuB,yBAKtBA,EAAaR,KAAKS,MALI,2CAAH,sDAOf9B,EAAkB,mCAAG,WAAMgB,GAAN,uFACFC,IAAAA,IAAA,iBAClBD,EADkB,4BACIE,IAFF,cAC1Ba,EAD0B,yBAKzBA,EAAgBV,KAAKW,SALI,2CAAH","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","service/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__DJKij\",\"text\":\"Reviews_text__EqLvx\",\"title\":\"Reviews_title__t265C\"};","import styles from './Reviews.module.css';\nimport { useState, useEffect } from 'react';\nimport { fetchReviewsMovies } from 'service/service';\nimport { useParams } from 'react-router-dom';\n// import { useLocation, useNavigate, NavLink, Outlet } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchReviewsMovies(movieId).then(setReviews);\n  }, [movieId]);\n  console.log(reviews);\n\n  return (\n    <>\n      {reviews.length ? (\n        reviews.map(review => (\n          <li key={review.id}>\n            <h2 className={styles.title}>Content</h2>\n            <p className={styles.text}>{review.content}</p>\n            <img\n              src={\n                review.avatar_path &&\n                `https://www.themoviedb.org/review/${review.profile_path}`\n              }\n              alt={`${review.title} portrait`}\n              className={styles.img}\n            />\n\n            <b className={styles.title}>{review.author}</b>\n          </li>\n        ))\n      ) : (\n        <p>Reviews not found</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = '3b3b2a52a8d81c1bd80a2943e9f5b0db';\n\nexport const moviesById = async id => {\n  const responseById = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return responseById.data;\n};\n\nexport const fetchMovies = (page = 1) => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const searchMovies = async query => {\n  return axios.get(`/search/movie?api_key=${API_KEY}`, {\n    params: {\n      query: query,\n      per_page: 20,\n    },\n  });\n};\nexport const fetchCastMovies = async id => {\n  const responseCast = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return responseCast.data.cast;\n};\nexport const fetchReviewsMovies = async id => {\n  const responseReviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return responseReviews.data.results;\n};\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewsMovies","then","console","log","length","map","review","className","styles","content","src","avatar_path","profile_path","alt","title","author","id","axios","API_KEY","moviesById","responseById","data","fetchMovies","page","searchMovies","query","params","per_page","fetchCastMovies","responseCast","cast","responseReviews","results"],"sourceRoot":""}