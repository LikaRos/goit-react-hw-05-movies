{"version":3,"file":"static/js/50.32210c92.chunk.js","mappings":"sMACA,EAAuB,4B,SCIVA,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAEjBC,GAFN,eAE2BC,IAAI,SAC/B,OACE,+BACE,eAAIC,UAAWC,EAAf,SACqB,IAAlBP,EAAOQ,QAAgBJ,GACtB,8CAEAJ,EAAOS,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCD,EAAME,IAC7CC,MAAO,CAAEC,KAAMb,GAFjB,SAIGS,EAAMK,SALFL,EAAME,a,0MChB3BI,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,WAAMN,GAAN,uFACGI,IAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCK,IADrC,cAClBE,EADkB,yBAGjBA,EAAaC,MAHI,2CAAH,sDAMVC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAON,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAyDK,KAGrDC,EAAY,mCAAG,WAAMnB,GAAN,0FACnBY,IAAAA,IAAA,gCAAmCC,GAAW,CACnDO,OAAQ,CACNpB,MAAOA,EACPqB,SAAU,OAJY,2CAAH,sDAQZC,EAAe,mCAAG,WAAMd,GAAN,uFACFI,IAAAA,IAAA,iBACfJ,EADe,4BACOK,IAFL,cACvBU,EADuB,yBAKtBA,EAAaP,KAAKQ,MALI,2CAAH,sDAOfC,EAAkB,mCAAG,WAAMjB,GAAN,uFACFI,IAAAA,IAAA,iBAClBJ,EADkB,4BACIK,IAFF,cAC1Ba,EAD0B,yBAKzBA,EAAgBV,KAAKW,SALI,2CAAH,uD,sHC7B/B,K,SCIO,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO9B,EAAP,KAAc+B,EAAd,KAeA,OACE,+BACE,mBAAQ7B,UAAU,YAAlB,UACE,kBAAM2B,SAZS,SAAAG,GACnBA,EAAEC,iBACY,KAAVjC,EACFkC,MAAM,wBAENL,EAAS7B,GAEX+B,EAAS,KAKyB7B,UAAWC,EAAAA,KAAzC,WACE,mBAAQgC,KAAK,SAASjC,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,uBAGF,kBACEA,UAAWC,EAAAA,MACXiC,MAAOpC,EACPmC,KAAK,OACLE,YAAY,gBACZC,SA1BW,SAAAC,GACnBR,EAASQ,EAAMC,OAAOJ,iBCD1B,IAAMK,EACE,OADFA,EAGG,QAIM,SAASC,IACtB,OAA4BZ,EAAAA,EAAAA,UAASW,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOlC,EAAP,KAAeiD,EAAf,KAEA,GAAwC9C,EAAAA,EAAAA,MAAxC,eAAO+C,EAAP,KAAqBC,EAArB,KAMM/C,EAAQ8C,EAAa7C,IAAI,SAa/B,IAXA+C,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIlD,GACRA,IACFmB,EAAAA,EAAAA,IAAanB,GACVmD,MAAK,gBAAGnC,EAAH,EAAGA,KAAH,OAAc6B,EAAU7B,EAAKW,YAClCyB,OAAM,WACLR,EAAUH,QAGf,CAACzC,IACJiD,QAAQC,IAAItD,GACR+C,EACF,OACE,iCACE,SAACf,EAAD,CAAYC,SArBG,SAAA7B,GACnB+C,EAAgB,CAAE/C,MAAAA,QAqBd,SAACL,EAAA,EAAD,CAAeC,OAAQA","sources":["webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","service/service.js","components/SearchForm/SearchForm.module.css","components/SearchForm/SearchForm.jsx","views/MoviesView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesGallery_list__aM+SO\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport styles from './MoviesGallery.module.css';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.length === 0 && query ? (\n          <p>Movie is not found</p>\n        ) : (\n          movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = '3b3b2a52a8d81c1bd80a2943e9f5b0db';\n\nexport const moviesById = async id => {\n  const responseById = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return responseById.data;\n};\n\nexport const fetchMovies = (page = 1) => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const searchMovies = async query => {\n  return axios.get(`/search/movie?api_key=${API_KEY}`, {\n    params: {\n      query: query,\n      per_page: 20,\n    },\n  });\n};\nexport const fetchCastMovies = async id => {\n  const responseCast = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return responseCast.data.cast;\n};\nexport const fetchReviewsMovies = async id => {\n  const responseReviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return responseReviews.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport styles from './SearchForm.module.css';\n\nimport PropTypes from 'prop-types';\n\nexport function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      alert('Enter the movie name');\n    } else {\n      onSubmit(query);\n    }\n    setQuery('');\n  };\n  return (\n    <>\n      <header className=\"searchbar\">\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <button type=\"submit\" className=\"button\">\n            <span className=\"button-label\">Search</span>\n          </button>\n\n          <input\n            className={styles.input}\n            value={query}\n            type=\"text\"\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    </>\n  );\n}\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'service/service';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n// import styles from 'views/Views.module.css';\n\nconst STATUS = {\n  Idle: 'idle',\n  Loading: 'loading',\n  Error: 'error',\n  Success: 'success',\n};\n\nexport default function MoviesView() {\n  const [status, setStatus] = useState(STATUS.Idle);\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleSubmit = query => {\n    setSearchParams({ query });\n    return;\n  };\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    console.log(query);\n    if (query) {\n      searchMovies(query)\n        .then(({ data }) => setMovies(data.results))\n        .catch(() => {\n          setStatus(STATUS.Error);\n        });\n    }\n  }, [query]);\n  console.log(movies);\n  if (status) {\n    return (\n      <>\n        <SearchForm onSubmit={handleSubmit} />\n        <MoviesGallery movies={movies} />\n      </>\n    );\n  }\n}\n"],"names":["MoviesGallery","movies","location","useLocation","useSearchParams","query","get","className","styles","length","map","movie","to","id","state","from","title","axios","API_KEY","moviesById","responseById","data","fetchMovies","page","searchMovies","params","per_page","fetchCastMovies","responseCast","cast","fetchReviewsMovies","responseReviews","results","SearchForm","onSubmit","useState","setQuery","e","preventDefault","alert","type","value","placeholder","onChange","event","target","STATUS","MoviesView","status","setStatus","setMovies","searchParams","setSearchParams","useEffect","console","log","then","catch"],"sourceRoot":""}