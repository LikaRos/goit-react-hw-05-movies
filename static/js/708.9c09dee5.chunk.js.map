{"version":3,"file":"static/js/708.9c09dee5.chunk.js","mappings":"uMACA,EAAuB,4B,SCIVA,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxBC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAEjBC,GAFN,eAE2BC,IAAI,SAC/B,OACE,+BACE,eAAIC,UAAWC,EAAf,SACqB,IAAlBP,EAAOQ,QAAgBJ,GACtB,8CAEAJ,EAAOS,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCD,EAAME,IAC7CC,MAAO,CAAEC,KAAMb,GAFjB,SAIGS,EAAMK,SALFL,EAAME,a,0MChB3BI,IAAAA,SAAAA,QAAA,gCAEA,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,WAAMN,GAAN,uFACGI,IAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCK,IADrC,cAClBE,EADkB,yBAGjBA,EAAaC,MAHI,2CAAH,sDAMVC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAON,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAyDK,KAGrDC,EAAY,mCAAG,WAAMnB,GAAN,0FACnBY,IAAAA,IAAA,gCAAmCC,GAAW,CACnDO,OAAQ,CACNpB,MAAOA,EACPqB,SAAU,OAJY,2CAAH,sDAQZC,EAAe,mCAAG,WAAMd,GAAN,uFACFI,IAAAA,IAAA,iBACfJ,EADe,4BACOK,IAFL,cACvBU,EADuB,yBAKtBA,EAAaP,KAAKQ,MALI,2CAAH,sDAOfC,EAAkB,mCAAG,WAAMjB,GAAN,uFACFI,IAAAA,IAAA,iBAClBJ,EADkB,4BACIK,IAFF,cAC1Ba,EAD0B,yBAKzBA,EAAgBV,KAAKW,SALI,2CAAH,uD,uHC1BzBC,EACE,OADFA,EAGG,QAGIC,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAASF,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOlC,EAAP,KAAeqC,EAAf,KASA,IAPAC,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,MACGkB,MAAK,gBAAGnB,EAAH,EAAGA,KAAH,OAAciB,EAAUjB,EAAKW,YAClCS,OAAM,WACLJ,EAAUJ,QAEb,IACCG,EACF,OACE,iCACE,+CADF,KAEE,SAAC,IAAD,CAAenC,OAAQA,QAM/B","sources":["webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","service/service.js","views/HomeView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesGallery_list__aM+SO\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport styles from './MoviesGallery.module.css';\n\nexport const MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.length === 0 && query ? (\n          <p>Movie is not found</p>\n        ) : (\n          movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nconst API_KEY = '3b3b2a52a8d81c1bd80a2943e9f5b0db';\n\nexport const moviesById = async id => {\n  const responseById = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  return responseById.data;\n};\n\nexport const fetchMovies = (page = 1) => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const searchMovies = async query => {\n  return axios.get(`/search/movie?api_key=${API_KEY}`, {\n    params: {\n      query: query,\n      per_page: 20,\n    },\n  });\n};\nexport const fetchCastMovies = async id => {\n  const responseCast = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}`\n  );\n\n  return responseCast.data.cast;\n};\nexport const fetchReviewsMovies = async id => {\n  const responseReviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n\n  return responseReviews.data.results;\n};\n","import { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { useEffect, useState } from 'react';\nimport { fetchMovies } from 'service/service';\n\nconst STATUS = {\n  Idle: 'idle',\n  Loading: 'loading',\n  Error: 'error',\n  Success: 'success',\n};\nexport const HomeView = () => {\n  const [status, setStatus] = useState(STATUS.Idle);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies()\n      .then(({ data }) => setMovies(data.results))\n      .catch(() => {\n        setStatus(STATUS.Error);\n      });\n  }, []);\n  if (status) {\n    return (\n      <>\n        <h1> welcome to MOVIES</h1>;\n        <MoviesGallery movies={movies} />\n      </>\n    );\n  }\n};\n\nexport default HomeView;\n"],"names":["MoviesGallery","movies","location","useLocation","useSearchParams","query","get","className","styles","length","map","movie","to","id","state","from","title","axios","API_KEY","moviesById","responseById","data","fetchMovies","page","searchMovies","params","per_page","fetchCastMovies","responseCast","cast","fetchReviewsMovies","responseReviews","results","STATUS","HomeView","useState","status","setStatus","setMovies","useEffect","then","catch"],"sourceRoot":""}